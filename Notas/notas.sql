/* PRATICANDO */

CREATE DATABASE NOTAS;

CREATE DATABASE VENDAS_2;

USE VENDAS_2;


CREATE TABLE VENDA(
	IDVENDA INT PRIMARY KEY AUTO_INCREMENT,
	NOME_CLIENTE VARCHAR(30),
	SEXO_CLIENTE ENUM("M", "F"),
	CPF_CLIENTE VARCHAR(11),
	DATA DATETIME NOT NULL
);


CREATE TABLE PRODUTO(
	IDPRODUTO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30) NOT NULL,
	VALOR FLOAT(10, 2) NOT NULL,
	QUANTIDADE INT NOT NULL,
	TOTAL FLOAT(10, 2) NOT NULL,
	ID_VENDA INT NOT NULL
);


/* ADICIONANDO FOREIGN KEYS */

ALTER TABLE PRODUTO
ADD CONSTRAINT FK_PRODUTO_VENDA
FOREIGN KEY (ID_VENDA)
REFERENCES VENDA(IDVENDA);


/* PRIMEIROS TESTES */


INSERT INTO VENDA VALUES( NULL, "OSVALDO", "M", "64763879836", NOW());


INSERT INTO PRODUTO VALUES(NULL,"ARROZ A", 4.50, 3, (3 * 4.50), 1);
INSERT INTO PRODUTO VALUES(NULL,"ARROZ B", 7.00, 3, (3 * 7.00), 1);
INSERT INTO PRODUTO VALUES(NULL,"FEIJÃO A", 7.50, 5, (5 * 7.50), 1);


/* PROCEDURES DE INSERT */

DELIMITER $

CREATE PROCEDURE INSERT_VENDA(
	P_NOME VARCHAR(30),
	P_SEXO ENUM("M", "F"),
	P_CPF VARCHAR(11)
)
BEGIN

	INSERT INTO VENDA VALUES(
		NULL,
		P_NOME,
		P_SEXO,
		P_CPF,
		NOW()
	);

END
$


CREATE PROCEDURE INSERT_PRODUTO(
	P_NOME VARCHAR(30),
	P_VALOR FLOAT(10, 2),
	P_QUANTIDADE INT,
	P_ID_VENDA INT
)
BEGIN

	INSERT INTO PRODUTO VALUES(
		NULL,
		P_NOME,
		P_VALOR,
		P_QUANTIDADE,
		(P_VALOR * P_QUANTIDADE),
		P_ID_VENDA
	);

END
$

DELIMITER ;


/* RELATÓRIO DAS VENDAS ATRAVÉS DE UMA VIEW */

CREATE VIEW V_RELATORIO_COMPLETO AS
SELECT IDVENDA,
       NOME_CLIENTE,
       SEXO_CLIENTE,
       CPF_CLIENTE,
       DATA,
       IDPRODUTO,
       NOME,
       VALOR,
       QUANTIDADE,
       TOTAL AS "TOTAL DO PRODUTO",
       (SELECT SUM(TOTAL) FROM PRODUTO P WHERE P.ID_VENDA = IDVENDA) AS "TOTAL DA VENDA"
 FROM VENDA
 INNER JOIN PRODUTO
 ON IDVENDA = ID_VENDA;


/* CRIANDO A TABELA DAS NOTAS NO BANCO DE NOTAS */

USE NOTAS;

CREATE TABLE NOTA(
	IDNOTA INT PRIMARY KEY AUTO_INCREMENT,
	NOME_CLIENTE VARCHAR(30),
	SEXO_CLIENTE ENUM("M", "F"),
	CPF_CLIENTE VARCHAR(11),
	TOTAL FLOAT(10, 2) NOT NULL,
	DATA DATETIME NOT NULL,
	ID_VENDA INT UNIQUE NOT NULL
);


ALTER TABLE NOTA
ADD CONSTRAINT FK_NOTA_VENDA
FOREIGN KEY (ID_VENDA)
REFERENCES VENDAS_2.VENDA(IDVENDA);


USE VENDAS_2;


/* PROCEDURE PARA CRIAR A NOTA NO BANCO DE NOTAS */

DELIMITER $

CREATE PROCEDURE INSERT_NOTA(P_ID_VENDA INT)
BEGIN

	INSERT INTO NOTAS.NOTA VALUES(
		NULL,
		(SELECT V.NOME_CLIENTE FROM VENDAS_2.VENDA V WHERE V.IDVENDA = P_ID_VENDA),
		(SELECT V.SEXO_CLIENTE FROM VENDAS_2.VENDA V WHERE V.IDVENDA = P_ID_VENDA),
		(SELECT V.CPF_CLIENTE FROM VENDAS_2.VENDA V WHERE V.IDVENDA = P_ID_VENDA),
		(SELECT SUM(TOTAL) FROM VENDAS_2.PRODUTO P WHERE P.ID_VENDA = P_ID_VENDA),
		(SELECT V.DATA FROM VENDAS_2.VENDA V WHERE V.IDVENDA = P_ID_VENDA),
		P_ID_VENDA
	);

END
$

DELIMITER ;


/* TESTANDO A PROCEDURE */

CALL INSERT_NOTA(1);

SELECT * FROM NOTAS.NOTA;


/* TESTE GERAL */

/* TESTANDO TODAS AS PROCEDURES DE INSERT*/

CALL INSERT_VENDA("LUCAS", "M", "67846728946");

SELECT * FROM VENDA;

CALL INSERT_PRODUTO("SUCO", 0.99, 3, 2);
CALL INSERT_PRODUTO("PEÇA DE CARNE", 5.00, 1, 2);

SELECT * FROM PRODUTO;

SELECT * FROM V_RELATORIO_COMPLETO;


/* TESTANDO A PROCEDURE DE INSERT QUE SE COMUNICA COM O BANCO "NOTAS" */

CALL INSERT_NOTA(2);

SELECT * FROM NOTAS.NOTA;

